name: Run Flyway Migration
description: >
  Run flyway migration
inputs:
  flyway-sql-path:
    required: false
    type: string
  flyway-driver:
    required: false
    type: string
    default: 'software.aws.rds.jdbc.mysql.Driver'
  flyway-schemas:
    required: false
    type: string
  flyway-user:
    required: true
    type: string
  flyway-password:
    required: true
    type: string
  flyway-repair-first:
    required: false
    type: boolean
    default: true
  flyway-url:
    required: false
    type: string
    default: ''
  flyway-command:
    required: false
    type: string
    default: 'migrate'
  jdbc-driver-path:
    required: false
    type: string
    default: '/flyway/drivers'
  jdbc-driver-cache-path:
    required: false
    type: string
  jdbc-url-options:
    required: false
    type: string
    default: 'enabledTLSProtocols=TLSv1.2,TLSv1.3&useSSL=true&sslMode=PREFERRED&useServerPrepStmts=true&tcpKeepAlive=true&useCompression=true&useBatchMultiSend=false&connectTimeout=0&socketTimeout=0&usePipelineAuth=false&autoReconnect=true&maxReconnects=3&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&allowMultiQueries=true'
  jdbc-url-type:
    required: false
    type: string
    default: 'jdbc:mysql:aws:'
  jdbc-host:
    required: false
    type: string
    default: '127.0.0.1'
  jdbc-port:
    required: false
    type: string
    default: '3306'
  jdbc-database:
    required: false
    type: string
  flyway-docker-image:
    required: false
    type: string
    default: boxfuse/flyway:5.2.4-alpine
  flyway-connect-retries:
    required: false
    type: string
    default: '1'
  flyway-validate-on-migrate:
    required: false
    type: boolean
    default: false
  flyway-clean-disabled:
    required: false
    type: boolean
    default: false
  aws-driver-version:
    required: false
    type: string
    default: '1.0.0'
  network-mode:
    required: false
    type: string
    default: 'host'

runs:
  using: 'composite'
  steps:
    - name: Publish Bash Functions To Job Steps
      uses: Broadshield/actions/actions/bash_functions@dev

    - name: Wait until MySQL is available
      uses: Broadshield/actions/actions/wait_for_port@dev
      with:
        port: ${{ inputs.jdbc-port }}
        timeout: 60
        host: ${{ inputs.jdbc-host }}
        ping-message: '/* ping */'

    - name: Set Run Migration
      id: path
      env:
        FLYWAY_CONNECT_RETRIES: ${{ inputs.flyway-connect-retries }}
        FLYWAY_VALIDATE_ON_MIGRATE: ${{ inputs.flyway-validate-on-migrate }}
        FLYWAY_CLEAN_DISABLED: ${{ inputs.flyway-clean-disabled }}
        FLYWAY_SQL_PATH: ${{ inputs.flyway-sql-path }}
        FLYWAY_USER: ${{ inputs.flyway-user }}
        FLYWAY_PASSWORD: ${{ inputs.flyway-password }}
        FLYWAY_COMMAND: ${{ inputs.flyway-command }}
        FLYWAY_DOCKER_IMAGE: ${{ inputs.flyway-docker-image }}
        FLYWAY_SCHEMAS: ${{ inputs.flyway-schemas }}
        FLYWAY_DRIVER: ${{ inputs.flyway-driver }}
        FLYWAY_URL: ${{ inputs.flyway-url }}
        JDBC_URL_OPTIONS: ${{ inputs.jdbc-url-options }}
        JDBC_HOST: ${{ inputs.jdbc-host }}
        JDBC_PORT: ${{ inputs.jdbc-port }}
        JDBC_URL_TYPE: ${{ inputs.jdbc-url-type }}
        JDBC_DATABASE: ${{ inputs.jdbc-database }}
        JDBC_DRIVER_PATH: ${{ inputs.jdbc-driver-path }}
        JDBC_DRIVER_CACHE: ${{ inputs.jdbc-driver-cache-path }}
        AWS_MYSQL_DRIVER_VERSION: ${{ inputs.aws-driver-version }}
        REPAIR_FIRST: ${{ inputs.flyway-repair-first }}
        NETWORK_MODE: ${{ inputs.network-mode }}
        FLYWAY_DOCKER_COMPOSE_FILE: ${{ github.action_path }}/flyway/docker-compose.yml
        FLYWAY_ENTRYPOINT: ${{ github.action_path }}/flyway/flyway_entrypoint.sh
      shell: bash
      run: |
        notice_log "Running Flyway Migration as ${FLYWAY_USER} to ${JDBC_HOST_ORIGINAL:-${JDBC_HOST}}:${JDBC_PORT_ORIGINAL:-${JDBC_PORT}}"
        export JDBC_PORT="$(sed -e "s/'//g" <<<"${JDBC_PORT}")"
        export FLYWAY_PASSWORD="$(sed -e "s/^'\(.*\)'$/\1/g" <<<"${FLYWAY_PASSWORD}")"
        export FLYWAY_URL="${JDBC_URL_TYPE}//${JDBC_HOST}:${JDBC_PORT}?${JDBC_URL_OPTIONS}"
        if run_flyway_migration; then
          notice_log "Successfully ran Flyway $FLYWAY_COMMAND to ${FLYWAY_URL}"
        else
          error_log "Failed to run Flyway $FLYWAY_COMMAND to ${FLYWAY_URL}"
          exit 1
        fi
